name: Multi-Platform CI

on: [push, pull_request]

env:
  RUSTFLAGS: -D warnings

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-13, windows-2022]
        include:
          - os: ubuntu-22.04
            rust-target: x86_64-unknown-linux-gnu
            install-cmd: sudo apt-get install -y pkg-config libudev-dev
          - os: macos-13
            rust-target: x86_64-apple-darwin
            install-cmd: brew install pkg-config
          - os: windows-2022
            rust-target: x86_64-pc-windows-msvc
            install-cmd: choco install -y llvm

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup toolchain
        run: |
          rustup target add ${{ matrix.rust-target }}
          rustup component add clippy

      - name: Install dependencies
        run: ${{ matrix.install-cmd }}

      - name: Lint
        run: cargo clippy --all-targets --all-features

      - name: Build
        run: cargo build --release --target ${{ matrix.rust-target }}

      - name: Test
        run: cargo test --release --target ${{ matrix.rust-target }}
        env:
          RUST_BACKTRACE: full

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: binaries-${{ matrix.os }}
          path: |
            target/${{ matrix.rust-target }}/release/*.exe
            target/${{ matrix.rust-target }}/release/*.dylib
            target/${{ matrix.rust-target }}/release/*.so
